const {get_sumoTrafficDB} = require("../config/db/sumoTraficDB");
const {connect_congestionDB} = require("../config/db/congestionDB");
const {congestionEvaluation} = require("../evaluation/congestionEvaluation");
const {saveCongestionData} = require("../config/db/saveCongestionData");

const get__simulationData = async () => {
    try {
        const db = await get_sumoTrafficDB();

        if (!db) {
            throw new Error("‚ùå Base de donn√©es non connect√©e !");
        }

        const simulation_data = await db.collection("traffic_data").find().toArray();

        console.log("Donn√©es r√©cup√©r√©es du simulateur :", simulation_data.length, "enregistrements trouv√©s");
        return simulation_data;
    } catch (error) {
        console.error("‚ùå Erreur lors de la r√©cup√©ration des donn√©es :", error);
        throw error;
    }
};

const save_congestionData_to_DB = async (data) => {
    try {
        console.log("üîÑ Connexion √† la base de donn√©es de congestion...");
        await connect_congestionDB();

        console.log("üìä Calcul des donn√©es de congestion...");
        const congestionData = congestionEvaluation(data);

        console.log("üíæ Sauvegarde des donn√©es de congestion en cours...");
        await saveCongestionData(congestionData);

        console.log("‚úÖ Donn√©es de congestion enregistr√©es avec succ√®s !");
    } catch (error) {
        console.error("‚ùå Erreur lors de la sauvegarde des donn√©es de congestion :", error);
        throw error;
    }
};

const congestionDataToDB = async (req, res) => {
    try {
        console.log("üì• D√©but du processus de r√©cup√©ration et sauvegarde des donn√©es...");

        const simulation_data = await get__simulationData();
        await save_congestionData_to_DB(simulation_data);

        res.json({ message: "‚úÖ Donn√©es de congestion enregistr√©es avec succ√®s" });
    } catch (error) {
        console.error("‚ùå Erreur :", error);
        res.status(500).json({ error: "Erreur lors de la r√©cup√©ration et de l'enregistrement des donn√©es" });
    }
};

module.exports = { congestionDataToDB };
